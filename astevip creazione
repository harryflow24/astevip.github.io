
 109 changes: 109 additions & 0 deletions109  
cidici sito d'aste
Original file line number	Diff line number	Diff line change
@@ -0,0 +1,109 @@
# Create a new Django project
django-admin startproject astevip

# Navigate to the project directory
cd astevip

# Create a new app for the auction system
python manage.py startapp auctions

# Create a new app for user management
python manage.py startapp users

# Create a new app for payments
python manage.py startapp payments

# Create a new app for customer support
python manage.py startapp support
# users/models.py
from django.contrib.auth.models import AbstractUser
from django.db import models

class CustomUser(AbstractUser):
    phone_number = models.CharField(max_length=15)
    address = models.TextField()
    identity_verification = models.FileField(upload_to='identity_verifications/')

# auctions/models.py
from django.db import models
from users.models import CustomUser

class Category(models.Model):
    name = models.CharField(max_length=100)
    description = models.TextField()
    image = models.ImageField(upload_to='category_images/')

class AuctionItem(models.Model):
    category = models.ForeignKey(Category, on_delete=models.CASCADE)
    title = models.CharField(max_length=200)
    description = models.TextField()
    image = models.ImageField(upload_to='auction_images/')
    starting_bid = models.DecimalField(max_digits=10, decimal_places=2)
    current_bid = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    end_time = models.DateTimeField()

class Bid(models.Model):
    auction_item = models.ForeignKey(AuctionItem, on_delete=models.CASCADE)
    user = models.ForeignKey(CustomUser, on_delete=models.CASCADE)
    bid_amount = models.DecimalField(max_digits=10, decimal_places=2)
    bid_time = models.DateTimeField(auto_now_add=True)# auctions/views.py
from django.shortcuts import render
from .models import Category, AuctionItem

def homepage(request):
    categories = Category.objects.all()
    return render(request, 'homepage.html', {'categories': categories})

def category_page(request, category_id):
    category = Category.objects.get(id=category_id)
    auction_items = AuctionItem.objects.filter(category=category)
    return render(request, 'category_page.html', {'category': category, 'auction_items': auction_items})

# users/views.py
from django.shortcuts import render, redirect
from django.contrib.auth import login, authenticate
from .forms import CustomUserCreationForm

def register(request):
    if request.method == 'POST':
        form = CustomUserCreationForm(request.POST, request.FILES)
        if form.is_valid():
            user = form.save()
            login(request, user)
            return redirect('homepage')
    else:
        form = CustomUserCreationForm()
    return render(request, 'register.html', {'form': form})<!-- templates/homepage.html -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ASTEVIP - Luxury Auctions</title>
    <link rel="stylesheet" href="{% static 'css/style.css' %}">
</head>
<body>
    <header>
        <h1>Welcome to ASTEVIP</h1>
    </header>
    <main>
        <section class="categories">
            {% for category in categories %}
                <div class="category">
                    <img src="{{ category.image.url }}" alt="{{ category.name }}">
                    <h2>{{ category.name }}</h2>
                    <p>{{ category.description }}</p>
                    <a href="{% url 'category_page' category.id %}">View Auctions</a>
                </div>
            {% endfor %}
        </section>
    </main>
</body># Apply migrations
python manage.py migrate

# Create a superuser
python manage.py createsuperuser

# Run the development server
python manage.py runserver
</html>
